stages:
  - test
  - build
  - deploy

variables:
  GLIDE_HOME: /cache/glide

before_script:
  - mkdir -p /go/src/git.lukas.moe/sn0w /cache/glide
  - mv /builds/$CI_PROJECT_PATH /go/src/git.lukas.moe/sn0w
  - mkdir -p /builds/$CI_PROJECT_PATH

after_script:
  - rm -r /builds/$CI_PROJECT_PATH
  - mv /go/src/git.lukas.moe/sn0w/Karen /builds/$CI_PROJECT_PATH

cache:
  paths:
    - /glide/
    - vendor/

cyclo:
  stage: test
  image: sn0w/go-ci
  allow_failure: true
  script: gocyclo -over 15 . | grep -v vendor

misspell:
  stage: test
  image: sn0w/go-ci
  allow_failure: true
  script: misspell . | grep -v vendor

build:linux:
  stage: build
  image: sn0w/go-ci
  variables:
    GOOS: linux
    GOARCH: amd64
    GOTARGET: karen.o
  artifacts:
    expire_in: 15 mins
    paths:
      - karen.o
  script: cd /go/src/git.lukas.moe/sn0w/Karen && glide install && ./build.sh -v

build:osx:
  stage: build
  image: sn0w/go-ci
  variables:
    GOOS: darwin
    GOARCH: amd64
    GOTARGET: karen.xo
  artifacts:
      expire_in: 15 mins
      paths:
        - karen.xo
  script: cd /go/src/git.lukas.moe/sn0w/Karen && glide install && ./build.sh -v

build:windows:
  stage: build
  image: sn0w/go-ci
  variables:
    GOOS: windows
    GOARCH: amd64
    GOTARGET: karen.exe
  artifacts:
      expire_in: 15 mins
      paths:
        - karen.exe
  script: cd /go/src/git.lukas.moe/sn0w/Karen && glide install && ./build.sh -v

collect_artifacts:
  stage: deploy
  image: sn0w/go-ci
  script: echo "Empty job that collects artifacts! :)"
  dependencies:
    - build:linux
    - build:osx
    - build:windows
  only:
    - tags
  artifacts:
    expire_in: 2 weeks
    paths:
      - karen.*
  before_script:
    - exit 0
  after_script:
    - exit 0
